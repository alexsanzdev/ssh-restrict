#!/usr/bin/env python
import ConfigParser
import os
import re
import shlex
import sys

RETURN_CODE_WRONG_USAGE = 3
RETURN_CODE_COMMAND_NOT_FOUND = 3

CONFIG_SECTION_NAME_COMMANDS = "commands"

if len(sys.argv) != 2:
    print >> sys.stderr, "Usage: ssh-restrict CONFIG"
    sys.exit(RETURN_CODE_WRONG_USAGE)

try:
    origcmd = os.environ["SSH_ORIGINAL_COMMAND"]
except KeyError:
    print >> sys.stderr, "ssh-restrict: $SSH_ORIGINAL_COMMAND is not set"
    sys.exit(RETURN_CODE_WRONG_USAGE)

config = ConfigParser.RawConfigParser()
config.readfp(open(sys.argv[1]))

for pat, cmd in config.items(CONFIG_SECTION_NAME_COMMANDS):
    m = re.match("^" + pat + "$", origcmd)
    if m:
        cmd = cmd.format(*m.groups())
        cmdparts = shlex.split(cmd)
        try:
            os.execvp(cmdparts[0], cmdparts)
        except OSError:
            print >> sys.stderr, "ssh-restrict: command not found: %s" % \
                                 cmdparts[0]
            sys.exit(RETURN_CODE_COMMAND_NOT_FOUND)
else:
    print >> sys.stderr, "ssh-restrict: command not defined: %s" % (origcmd)
    sys.exit(RETURN_CODE_WRONG_USAGE)
